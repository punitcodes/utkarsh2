// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Mandal

model Mandal {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  name      String   @unique
  Sabha     Sabha[]
  Team      Team[]
  Yuvak     Yuvak[]
}

// Sabha

model Sabha {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  date      DateTime
  mandalId  Int
  mandal    Mandal   @relation(fields: [mandalId], references: [id])
  Points    Points[]
}

model Team {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  mandalId  Int
  Mandal    Mandal   @relation(fields: [mandalId], references: [id])
  Yuvak     Yuvak[]
  Points    Points[]
}

// Yuvak

model Yuvak {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String
  phone     String?
  role      YuvakRole @default(YUVAK)
  mandalId  Int
  mandal    Mandal    @relation(fields: [mandalId], references: [id])
  teamId    Int
  team      Team      @relation(fields: [teamId], references: [id])
  Points    Points[]
}

enum YuvakRole {
  MENTOR
  LEADER
  YUVAK
}

// Points

model Points {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  type PointsType

  sabhaId Int
  sabha   Sabha @relation(fields: [sabhaId], references: [id])

  // individual points
  yuvakId Int?
  yuvak   Yuvak? @relation(fields: [yuvakId], references: [id])

  // team points
  teamId Int?
  team   Team? @relation(fields: [teamId], references: [id])
}

enum PointsType {
  TEAM
  YUVAK
}
